name: re-formality pipeline

on: [push, pull_request]

jobs:
  build:
    name: Build on ${{ matrix.os }} using Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Print Yarn cache
        id: print-yarn-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Restore Yarn cache
        id: yarn-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.print-yarn-cache.outputs.yarn-cache }}
          key: ${{ matrix.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install Yarn deps
        run: yarn install

      - name: Install Esy
        run: npm install -g esy@0.6.2

      - name: Install Esy deps
        working-directory: lib
        run: esy install

      - name: Print Esy cache
        id: print-esy-cache
        run: node .github/workflows/print-esy-cache.js

      - name: Restore Esy cache
        id: esy-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.print-esy-cache.outputs.esy-cache }}
          key: ${{ matrix.os }}-esy-${{ hashFiles('**/index.json') }}

      - name: Build ppx
        working-directory: lib
        run: esy build

      - name: Build BuckleScript lib
        working-directory: lib
        run: yarn bs:build

      - name: Install public interface of BuckleScript lib
        working-directory: lib
        run: yarn bs:install

      - name: Run ppx tests
        working-directory: lib
        run: esy echo  x test.exe
